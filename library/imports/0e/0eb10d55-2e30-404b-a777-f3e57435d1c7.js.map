{"version":3,"sources":["assets\\FrameWork\\3rd\\CSVParser.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["var CELL_DELIMITERS = [\",\", \";\", \"\\t\", \"|\", \"^\"];\r\nvar LINE_DELIMITERS = [\"\\r\\n\", \"\\r\", \"\\n\"];\r\n\r\nvar getter = function (index) {\r\n    return (\"d[\" + index + \"]\");\r\n};\r\n\r\nvar getterCast = function(value, index, cast, d) {\r\n\r\n    if (cast instanceof Array) {\r\n        if (cast[index] === \"number\") {\r\n            return Number(d[index]);\r\n        } else if (cast[index] === \"boolean\") {\r\n            return d[index] === \"true\" ||  d[index] === \"t\" || d[index] === \"1\";\r\n        } else {\r\n            return d[index];\r\n        }\r\n    } else {\r\n        if (!isNaN(Number(value))) {\r\n            return Number(d[index]);\r\n        } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\r\n            return d[index] === \"true\" ||  d[index] === \"t\" || d[index] === \"1\";\r\n        } else {\r\n            return d[index];\r\n        }\r\n    }\r\n};\r\n\r\nvar CSV = {\r\n    //\r\n\r\n    /* =========================================\r\n        * Constants ===============================\r\n        * ========================================= */\r\n\r\n    STANDARD_DECODE_OPTS: {\r\n        skip: 0,\r\n        limit: false,\r\n        header: false,\r\n        cast: false,\r\n        comment: \"\"\r\n    },\r\n\r\n    STANDARD_ENCODE_OPTS: {\r\n        delimiter: CELL_DELIMITERS[0],\r\n        newline: LINE_DELIMITERS[0],\r\n        skip: 0,\r\n        limit: false,\r\n        header: false\r\n    },\r\n\r\n    quoteMark: '\"',\r\n    doubleQuoteMark: '\"\"',\r\n    quoteRegex: /\"/g,\r\n\r\n    /* =========================================\r\n        * Utility Functions =======================\r\n        * ========================================= */\r\n    assign: function () {\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var base = args[0];\r\n        var rest = args.slice(1);\r\n        for (var i = 0, len = rest.length; i < len; i++) {\r\n            for (var attr in rest[i]) {\r\n                base[attr] = rest[i][attr];\r\n            }\r\n        }\r\n\r\n        return base;\r\n    },\r\n\r\n    map: function (collection, fn) {\r\n        var results = [];\r\n        for (var i = 0, len = collection.length; i < len; i++) {\r\n            results[i] = fn(collection[i], i);\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    getType: function (obj) {\r\n        return Object.prototype.toString.call(obj).slice(8, -1);\r\n    },\r\n\r\n    getLimit: function (limit, len) {\r\n        return limit === false ? len : limit;\r\n    },\r\n\r\n    buildObjectConstructor: function(fields, sample, cast) {\r\n        return function(d) {\r\n            var object = new Object();\r\n            var setter = function(attr, value) {\r\n                return object[attr] = value;\r\n            };\r\n            if (cast) {\r\n                fields.forEach(function(attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                });\r\n            } else {\r\n                fields.forEach(function(attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, null, d));\r\n                });\r\n            }\r\n            // body.push(\"return object;\");\r\n            // body.join(\";\\n\");\r\n            return object;\r\n        };\r\n    },\r\n\r\n    buildArrayConstructor: function(fields, sample, cast) {\r\n        return function(d) {\r\n            var row = new Array(sample.length);\r\n            var setter = function(idx, value) {\r\n                return row[idx] = value;\r\n            };\r\n            if (cast) {\r\n                fields.forEach(function(attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                });\r\n            } else {\r\n                fields.forEach(function(attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, null, d));\r\n                });\r\n            }\r\n            return row;\r\n        };\r\n    },\r\n\r\n    frequency: function (coll, needle, limit) {\r\n        if (limit === void 0) limit = false;\r\n\r\n        var count = 0;\r\n        var lastIndex = 0;\r\n        var maxIndex = this.getLimit(limit, coll.length);\r\n\r\n        while (lastIndex < maxIndex) {\r\n            lastIndex = coll.indexOf(needle, lastIndex);\r\n            if (lastIndex === -1) break;\r\n            lastIndex += 1;\r\n            count++;\r\n        }\r\n\r\n        return count;\r\n    },\r\n\r\n    mostFrequent: function (coll, needles, limit) {\r\n        var max = 0;\r\n        var detected;\r\n\r\n        for (var cur = needles.length - 1; cur >= 0; cur--) {\r\n            if (this.frequency(coll, needles[cur], limit) > max) {\r\n                detected = needles[cur];\r\n            }\r\n        }\r\n\r\n        return detected || needles[0];\r\n    },\r\n\r\n    unsafeParse: function (text, opts, fn) {\r\n        var lines = text.split(opts.newline);\r\n\r\n        if (opts.skip > 0) {\r\n            lines.splice(opts.skip);\r\n        }\r\n\r\n        var fields;\r\n        var constructor;\r\n\r\n        function cells(lines) {\r\n            var line = lines.shift();\r\n            if (line.indexOf('\"') >= 0) {// 含引号\r\n\r\n                // 找到这行完整的数据, 找到对称的双引号\r\n                var lastIndex = 0;\r\n                var findIndex = 0;\r\n                var count = 0;\r\n                while (lines.length > 0) {\r\n                    lastIndex = line.indexOf('\"', findIndex);\r\n                    if (lastIndex === -1 && count % 2 === 0) break;\r\n\r\n                    if (lastIndex !== -1) {\r\n                        findIndex = lastIndex + 1;\r\n                        count++;\r\n                    } else {\r\n                        line = line + opts.newline + lines.shift();\r\n                    }\r\n                }\r\n\r\n                var list = [];\r\n                var item;\r\n\r\n                var quoteCount = 0;\r\n\r\n                var start = 0;\r\n                var end = 0;\r\n                var length = line.length;\r\n                for (var key in line) {\r\n                    if (!line.hasOwnProperty(key)) {\r\n                        continue;\r\n                    }\r\n\r\n                    let numKey = parseInt(key);\r\n                    var value = line[key];\r\n\r\n                    if (numKey === 0 && value === '\"') {\r\n                        quoteCount++;\r\n                        start = 1;\r\n                    }\r\n\r\n                    if (value === '\"') {\r\n                        quoteCount++;\r\n\r\n                        if (line[numKey - 1] === opts.delimiter && start === numKey) {\r\n                            start++;\r\n                        }\r\n                    }\r\n\r\n                    if (value === '\"' && quoteCount % 2 === 0) {\r\n\r\n                        if (line[numKey + 1] === opts.delimiter || numKey + 1 === length) {\r\n                            end = numKey;\r\n                            item = line.substring(start, end);\r\n                            list.push(item);\r\n                            start = end + 2;\r\n                            end = start;\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (value === opts.delimiter && quoteCount % 2 === 0) {\r\n                        end = numKey;\r\n                        if (end > start) {\r\n                            item = line.substring(start, end);\r\n                            list.push(item);\r\n                            start = end + 1;\r\n                            end = start;\r\n                        } else if (end === start) {\r\n                            list.push(\"\");\r\n                            start = end + 1;\r\n                            end = start;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                end = length;\r\n\r\n                if (end >= start) {\r\n                    item = line.substring(start, end);\r\n                    list.push(item);\r\n                }\r\n\r\n                return list;\r\n            } else {\r\n                return line.split(opts.delimiter);\r\n            }\r\n        }\r\n\r\n        if (opts.header) {\r\n            if (opts.header === true) {\r\n                opts.comment = cells(lines); // 第一行是注释\r\n                opts.cast = cells(lines); // 第二行是数据类型\r\n                fields = cells(lines); // 第三行是字段\r\n            } else if (this.getType(opts.header) === \"Array\") {\r\n                fields = opts.header;\r\n            }\r\n\r\n            constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\r\n        } else {\r\n            constructor = this.buildArrayConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            var row = cells(lines);\r\n            if (row.length > 1) {\r\n                fn(constructor(row), fields[0]);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    safeParse: function (text, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n\r\n        var lines = text.split(newline);\r\n        if (opts.skip > 0) {\r\n            lines.splice(opts.skip);\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    encodeCells: function (line, delimiter, newline) {\r\n        var row = line.slice(0);\r\n        for (var i = 0, len = row.length; i < len; i++) {\r\n            if (row[i].indexOf(this.quoteMark) !== -1) {\r\n                row[i] = row[i].replace(this.quoteRegex, this.doubleQuoteMark);\r\n            }\r\n\r\n            if (row[i].indexOf(delimiter) !== -1 || row[i].indexOf(newline) !== -1) {\r\n                row[i] = this.quoteMark + row[i] + this.quoteMark;\r\n            }\r\n        }\r\n\r\n        return row.join(delimiter);\r\n    },\r\n\r\n    encodeArrays: function(coll, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n\r\n        if (opts.header && this.getType(opts.header) === \"Array\") {\r\n            fn(this.encodeCells(opts.header, delimiter, newline));\r\n        }\r\n\r\n        for (var cur = 0, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\r\n            fn(this.encodeCells(coll[cur], delimiter, newline));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    encodeObjects: function (coll, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n        var header;\r\n        var row;\r\n\r\n        header = [];\r\n        row = [];\r\n        for (var key in coll[0]) {\r\n            header.push(key);\r\n            row.push(coll[0][key]);\r\n        }\r\n\r\n        if (opts.header === true) {\r\n            fn(this.encodeCells(header, delimiter, newline));\r\n        } else if (this.getType(opts.header) === \"Array\") {\r\n            fn(this.encodeCells(opts.header, delimiter, newline));\r\n        }\r\n\r\n        fn(this.encodeCells(row, delimiter));\r\n\r\n        for (var cur = 1, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\r\n            row = [];\r\n            for (var key$1 = 0, len = header.length; key$1 < len; key$1++) {\r\n                row.push(coll[cur][header[key$1]]);\r\n            }\r\n\r\n            fn(this.encodeCells(row, delimiter, newline));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    parse: function (text, opts, fn) {\r\n        var rows;\r\n\r\n        if (this.getType(opts) === \"Function\") {\r\n            fn = opts;\r\n            opts = {};\r\n        } else if (this.getType(fn) !== \"Function\") {\r\n            rows = [];\r\n            fn = rows.push.bind(rows);\r\n        } else {\r\n            rows = [];\r\n        }\r\n\r\n        opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\r\n        this.opts = opts;\r\n\r\n        if (!opts.delimiter || !opts.newline) {\r\n            var limit = Math.min(48, Math.floor(text.length / 20), text.length);\r\n            opts.delimiter = opts.delimiter || this.mostFrequent(text, CELL_DELIMITERS, limit);\r\n            opts.newline = opts.newline || this.mostFrequent(text, LINE_DELIMITERS, limit);\r\n        }\r\n\r\n        // modify by jl 由表自行控制不要含有双引号.提高解析效率\r\n        return this.unsafeParse(text, opts, fn) &&\r\n            (rows.length > 0 ? rows : true);\r\n    },\r\n\r\n    encode: function (coll, opts, fn) {\r\n        var lines;\r\n\r\n        if (this.getType(opts) === \"Function\") {\r\n            fn = opts;\r\n            opts = {};\r\n        } else if (this.getType(fn) !== \"Function\") {\r\n            lines = [];\r\n            fn = lines.push.bind(lines);\r\n        }\r\n\r\n        opts = this.assign({}, this.STANDARD_ENCODE_OPTS, opts);\r\n\r\n        if (opts.skip > 0) {\r\n            coll = coll.slice(opts.skip);\r\n        }\r\n\r\n        return (this.getType(coll[0]) === \"Array\" ? this.encodeArrays : this.encodeObjects)(coll, opts, fn) &&\r\n            (lines.length > 0 ? lines.join(opts.newline) : true);\r\n    }\r\n};\r\n\r\nexport default CSV;"]}