{"version":3,"sources":["assets\\FrameWork\\manager\\EventManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;IAAA;QAEW,SAAI,GAAU,IAAI,CAAA;QAClB,WAAM,GAAK,IAAI,CAAA;QACf,SAAI,GAAQ,EAAE,CAAA;IACzB,CAAC;IAAD,gBAAC;AAAD,CALA,AAKC,IAAA;AAED;IAAkC,gCAAY;IAA9C;QAAA,qEAiEC;QA5DW,cAAQ,GAAK,EAAE,CAAA;;IA4D3B,CAAC;IA/DiB,wBAAW,GAAzB;QACI,OAAO,YAAY,CAAC,SAAS,CAAA;IACjC,CAAC;IAGD,uCAAgB,GAAhB,UAAiB,SAAgB,EAAC,IAAa,EAAC,MAAU;QACtD,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAC,EAAE,CAAA;SAC9B;QAED,IAAI,MAAM,GAAC,KAAK,CAAA;QAChB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC9C,IAAI,IAAI,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAc,CAAA;YACjD,IAAG,IAAI,CAAC,IAAI,IAAE,IAAI,IAAE,IAAI,CAAC,MAAM,IAAE,MAAM,EAAC;gBACpC,MAAM,GAAC,IAAI,CAAA;gBACX,MAAK;aACR;SACJ;QAED,IAAG,CAAC,MAAM,EAAC;YACP,IAAI,IAAI,GAAC,IAAI,SAAS,CAAA;YACtB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAA;YACd,IAAI,CAAC,IAAI,GAAC,SAAS,CAAA;YACnB,IAAI,CAAC,MAAM,GAAC,MAAM,CAAA;YAElB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACtC;IACL,CAAC;IAED,0CAAmB,GAAnB,UAAoB,SAAgB,EAAC,IAAa,EAAC,MAAU;QACzD,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;YACzB,OAAM;SACT;QAED,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC9C,IAAI,IAAI,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAc,CAAA;YACjD,IAAG,IAAI,CAAC,IAAI,IAAE,IAAI,IAAE,IAAI,CAAC,MAAM,IAAE,MAAM,EAAC;gBACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;gBAClC,MAAK;aACR;SACJ;IACL,CAAC;IAED,2BAAI,GAAJ,UAAK,SAAgB,EAAC,IAAQ;QAC1B,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;YACzB,OAAM;SACT;QAED,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC9C,IAAI,IAAI,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAc,CAAA;YACjD,IAAI,IAAI,GAAC,IAAI,CAAC,IAAgB,CAAA;YAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,CAAA;SAC9B;IACL,CAAC;IAED,6BAAM,GAAN;QACI,IAAG,IAAI,IAAE,YAAY,CAAC,SAAS,EAAC;YAC5B,YAAY,CAAC,SAAS,GAAC,IAAI,CAAA;SAC9B;aACG;YACA,IAAI,CAAC,OAAO,EAAE,CAAA;SACjB;IACL,CAAC;IA/Da,sBAAS,GAAc,IAAI,CAAA;IAgE7C,mBAAC;CAjED,AAiEC,CAjEiC,EAAE,CAAC,SAAS,GAiE7C;AAjEY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["\r\nclass EventNode\r\n{\r\n    public func:Function=null\r\n    public target:any=null\r\n    public name:string=\"\"\r\n}\r\n\r\nexport class EventManager extends cc.Component {\r\n    public static _instance:EventManager=null\r\n    public static getInstance():EventManager{\r\n        return EventManager._instance\r\n    }\r\n    private eventMap:any={}\r\n\r\n    addEventListener(eventName:string,func:Function,target:any):void{\r\n        if(!this.eventMap[eventName]){\r\n            this.eventMap[eventName]=[]\r\n        }\r\n\r\n        let isExit=false\r\n        for(let i=0;i<this.eventMap[eventName].length;i++){\r\n            let node=this.eventMap[eventName][i] as EventNode\r\n            if(node.func==func&&node.target==target){\r\n                isExit=true\r\n                break\r\n            }\r\n        }\r\n\r\n        if(!isExit){\r\n            let node=new EventNode\r\n            node.func=func\r\n            node.name=eventName\r\n            node.target=target\r\n\r\n            this.eventMap[eventName].push(node)\r\n        }\r\n    }\r\n\r\n    removeEventListener(eventName:string,func:Function,target:any):void{\r\n        if(!this.eventMap[eventName]){\r\n            return\r\n        }\r\n\r\n        for(let i=0;i<this.eventMap[eventName].length;i++){\r\n            let node=this.eventMap[eventName][i] as EventNode\r\n            if(node.func==func&&node.target==target){\r\n                delete this.eventMap[eventName][i]\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    emit(eventName:string,data:any):void{\r\n        if(!this.eventMap[eventName]){\r\n            return\r\n        }\r\n\r\n        for(let i=0;i<this.eventMap[eventName].length;i++){\r\n            let node=this.eventMap[eventName][i] as EventNode\r\n            let func=node.func as Function\r\n            func.call(node.target,data)\r\n        }\r\n    }\r\n\r\n    onLoad(){\r\n        if(null==EventManager._instance){\r\n            EventManager._instance=this\r\n        }\r\n        else{\r\n            this.destroy()\r\n        }\r\n    }\r\n}\r\n\r\n"]}