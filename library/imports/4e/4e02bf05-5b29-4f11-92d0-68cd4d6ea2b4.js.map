{"version":3,"sources":["assets\\Scripts\\UI\\TaskUIControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport { UIManagerPro } from \"../../FrameWork/manager/UIManagerPro\";\nimport { UIControl } from \"../../FrameWork/ui/UIControl\";\nimport TaskDataManager from \"../data/TaskDataManager\";\nimport TaskItemControl from \"./TaskItemControl\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class TaskUIControl extends UIControl {\n    m_item:Array<any> = [];\n    m_selectId:number = 0;\n    m_content:cc.Node=null;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        super.onLoad();\n        this.m_content=this.getChildByUrl(\"ui_win_inRect/scrollView/view/content\");\n        this.buttonAddClickEvent(\"ui_win_rect/colse\",this.clickBtnEvent,this);\n\n       \n        this.updateData();\n    }\n    async updateData(){\n        for (let i = 0; i < this.m_item.length; i++) {\n            this.m_item[i].node.active = false;\n        }\n        var data = TaskDataManager.getInstance().getData();\n        for (let i = 0; i < data.length; i++) {\n            if(data[i].taskType != this.m_selectId){\n                continue;\n            }\n            if(this.m_item[i] == null ){\n                this.m_item[i] = await this.createItem(i);\n            }\n            this.m_item[i].node.active = true;\n            this.m_item[i].updateItem();\n        }\n    }\n\n    async createItem(taskID){\n        let taskPrefab=await UIManagerPro.getInstance().createOnlyPrefab(\"TaskItem\");\n        var item = cc.instantiate(taskPrefab);\n        this.m_content.addChild(item);\n        item.active = true;\n        let ts = item.addComponent(TaskItemControl);\n        ts.setTaskID(taskID);\n        return ts;\n    }\n\n    onChangeClick(tagert,data){\n        this.m_selectId = parseInt(data);\n        this.updateData();\n    }\n\n    clickBtnEvent(btn:cc.Button){\n        if(\"colse<Button>\"==btn.name){\n            UIManagerPro.getInstance().closePrefab(\"TaskUI\");\n        }\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n\n\n"]}