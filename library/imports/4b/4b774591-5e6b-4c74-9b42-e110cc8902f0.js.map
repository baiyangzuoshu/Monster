{"version":3,"sources":["assets\\FrameWork\\manager\\UIManagerPro.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA+C;AAE/C;IAAA;QACW,WAAM,GAAW,IAAI,CAAA;QACrB,YAAO,GAAS,KAAK,CAAA;QACrB,SAAI,GAAS,KAAK,CAAA;QAClB,cAAS,GAAQ,CAAC,CAAA;QAClB,SAAI,GAAS,IAAI,CAAA;IAC5B,CAAC;IAAD,YAAC;AAAD,CANA,AAMC,IAAA;AACD;;;EAGE;AACF;IAAkC,gCAAY;IAA9C;QAAA,qEAqIC;QAhIW,aAAO,GAAM,IAAI,CAAA;QACjB,mBAAa,GAAC,EAAE,CAAA;QAChB,kBAAY,GAAC,IAAI,CAAA;;IA8H7B,CAAC;IAnIiB,wBAAW,GAAzB;QACI,OAAO,YAAY,CAAC,SAAS,CAAA;IACjC,CAAC;IAKD,6BAAM,GAAN;QACI,IAAG,IAAI,IAAE,YAAY,CAAC,SAAS,EAAC;YAC5B,YAAY,CAAC,SAAS,GAAC,IAAI,CAAA;SAC9B;aACG;YACA,IAAI,CAAC,OAAO,EAAE,CAAA;SACjB;QAED,IAAI,CAAC,OAAO,GAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAoB,CAAA;IACrD,CAAC;IAEM,sCAAe,GAAtB,UAAuB,MAAa;QAChC,IAAI,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAU,CAAA;QAC7C,IAAG,KAAK,EAAC;YACL,OAAO,KAAK,CAAC,IAAI,CAAA;SACpB;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAEa,mCAAY,GAA1B,UAA2B,MAAM;uCAAE,OAAO;;;;4BAC3B,qBAAM,6BAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAC,KAAK,GAAC,MAAM,EAAC,EAAE,CAAC,MAAM,CAAC,EAAA;;wBAAjF,MAAM,GAAC,SAAuF;wBAClG,IAAG,CAAC,MAAM,EAAC;4BACP,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAC,MAAM,CAAC,CAAA;4BAC1C,sBAAO,IAAI,EAAA;yBACd;wBAED,sBAAO,MAAM,EAAA;;;;KAChB;IAEY,uCAAgB,GAA7B,UAA8B,MAAM;uCAAE,OAAO;;;;4BAC9B,qBAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAA;;wBAAtC,MAAM,GAAC,SAA+B;wBAE1C,sBAAO,MAAM,EAAA;;;;KAChB;IAEY,iCAAU,GAAvB,UAAwB,MAAa;uCAAE,OAAO;;;;;6BACvC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAA3B,wBAA2B;wBAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAC,IAAI,KAAK,EAAE,CAAA;wBAE3B,qBAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAA;;wBAAtC,WAAO,SAA+B;wBAC1C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,GAAC,QAAM,CAAA;;;wBAExC,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAU,CAAA;wBAE7C,IAAG,KAAK,CAAC,IAAI,EAAC;4BACV,sBAAO,CAAC,CAAC,EAAA;yBACZ;wBAED,KAAK,CAAC,OAAO,GAAC,IAAI,CAAA;wBAClB,KAAK,CAAC,IAAI,GAAC,KAAK,CAAA;wBAChB,KAAK,CAAC,SAAS,GAAC,CAAC,CAAA;wBAEb,MAAM,GAAC,KAAK,CAAC,MAAmB,CAAA;wBAChC,IAAI,GAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;wBAC/B,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAc,CAAA;wBAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAA;wBAEzC,KAAK,CAAC,IAAI,GAAC,IAAI,CAAA;wBAEf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAC,SAAS,CAAC,CAAA;wBAE7C,sBAAO,CAAC,EAAA;;;;KACX;IAEM,kCAAW,GAAlB,UAAmB,MAAa;QAC5B,IAAI,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAU,CAAA;QAC7C,IAAG,CAAC,KAAK,EAAC;YACN,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAC,MAAM,CAAC,CAAA;YAC3C,OAAO,CAAC,CAAC,CAAA;SACZ;QACD,IAAG,CAAC,KAAK,CAAC,IAAI,EAAC;YACX,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAC,MAAM,CAAC,CAAA;YAC/C,OAAO,CAAC,CAAC,CAAA;SACZ;QACD,KAAK,CAAC,IAAI,GAAC,KAAK,CAAA;QAChB,KAAK,CAAC,OAAO,GAAC,KAAK,CAAA;QACnB,KAAK,CAAC,SAAS,GAAC,EAAE,CAAA;QAElB,IAAI,IAAI,GAAC,KAAK,CAAC,IAAI,CAAA;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAA;QAEvB,IAAI,CAAC,YAAY,EAAE,CAAA;QAEnB,OAAO,CAAC,CAAA;IACZ,CAAC;IAEY,6BAAM,GAAnB,UAAoB,MAAa,EAAC,MAAW;uCAAE,OAAO;;;;4BACvC,qBAAM,6BAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAC,KAAK,GAAC,MAAM,EAAC,EAAE,CAAC,MAAM,CAAC,EAAA;;wBAAjF,MAAM,GAAC,SAAuF;wBAClG,IAAG,CAAC,MAAM,EAAC;4BACP,OAAO,CAAC,KAAK,CAAC,cAAc,EAAC,MAAM,CAAC,CAAA;4BACpC,sBAAM;yBACT;wBACD,MAAM,GAAC,MAAM,CAAA,CAAC,CAAC,MAAM,CAAA,CAAC,CAAA,IAAI,CAAC,OAAO,CAAA;wBAE9B,IAAI,GAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;wBAC/B,IAAI,CAAC,MAAM,GAAC,MAAM,CAAA;wBAElB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAC,SAAS,CAAC,CAAA;wBAE7C,sBAAO,IAAI,EAAA;;;;KACd;IAEK,6BAAM,GAAZ,UAAa,EAAE;;;;;;;mCACO,IAAI,CAAC,aAAa;;;;;;;wBAC5B,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAU,CAAA;6BAC1C,KAAK,CAAC,OAAO,EAAb,wBAAa;wBACZ,KAAK,CAAC,IAAI,GAAC,IAAI,CAAA;wBACf,KAAK,CAAC,OAAO,GAAC,KAAK,CAAA;;;6BAEf,CAAC,KAAK,CAAC,IAAI,EAAX,wBAAW;6BACZ,CAAA,KAAK,CAAC,SAAS,GAAC,CAAC,CAAA,EAAjB,wBAAiB;wBAChB,KAAK,CAAC,SAAS,IAAE,EAAE,CAAA;;4BAGR,qBAAM,6BAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAC,KAAK,GAAC,MAAM,EAAC,EAAE,CAAC,MAAM,CAAC,EAAA;;wBAAjF,MAAM,GAAC,SAAuF;wBAC9F,EAAE,GAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAC,SAAS,CAAQ,CAAA;wBACjE,IAAG,EAAE,EAAC;4BACF,EAAE,CAAC,OAAO,EAAE,CAAA;yBACf;wBACD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;;;;;;;;;KAIhD;IAnIa,sBAAS,GAAc,IAAI,CAAA;IAoI7C,mBAAC;CArID,AAqIC,CArIiC,EAAE,CAAC,SAAS,GAqI7C;AArIY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["import { ResManagerPro } from \"./ResManagerPro\"\r\n\r\nclass Panel{\r\n    public prefab:cc.Prefab=null\r\n    public opening:boolean=false\r\n    public open:boolean=false\r\n    public closeTime:number=0\r\n    public self:cc.Node=null\r\n}\r\n/*\r\n1.代码中构建ui，驱动游戏\r\n2.ui身上挂载代码，驱动游戏\r\n*/\r\nexport class UIManagerPro extends cc.Component {\r\n    public static _instance:UIManagerPro=null\r\n    public static getInstance():UIManagerPro{\r\n        return UIManagerPro._instance\r\n    }\r\n    private _canvas:Node=null\r\n    private _allShowPanel={}\r\n    private _localZOrder=1000\r\n\r\n    onLoad(){\r\n        if(null==UIManagerPro._instance){\r\n            UIManagerPro._instance=this\r\n        }\r\n        else{\r\n            this.destroy()\r\n        }\r\n\r\n        this._canvas=cc.find(\"Canvas\") as unknown as Node\r\n    }\r\n\r\n    public getPrefabByName(uiName:string):cc.Node{\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n        if(panel){\r\n            return panel.self\r\n        }\r\n        return null\r\n    }\r\n\r\n    private async createPrefab(uiName):Promise<cc.Prefab>{\r\n        let prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"UI/\"+uiName,cc.Prefab) as cc.Prefab;\r\n        if(!prefab){\r\n            console.error(\"createPrefab error\",uiName)\r\n            return null\r\n        }\r\n\r\n        return prefab\r\n    }\r\n\r\n    public async createOnlyPrefab(uiName):Promise<cc.Prefab>{\r\n        let prefab=await this.createPrefab(uiName)\r\n\r\n        return prefab\r\n    }\r\n\r\n    public async showPrefab(uiName:string):Promise<number>{\r\n        if(!this._allShowPanel[uiName]){\r\n            this._allShowPanel[uiName]=new Panel()\r\n\r\n            let prefab=await this.createPrefab(uiName)\r\n            this._allShowPanel[uiName].prefab=prefab\r\n        }\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n\r\n        if(panel.open){\r\n            return -1\r\n        }\r\n\r\n        panel.opening=true\r\n        panel.open=false\r\n        panel.closeTime=0\r\n\r\n        let prefab=panel.prefab as cc.Prefab\r\n        let node=cc.instantiate(prefab)\r\n        node.parent=this._canvas as any\r\n        node.setSiblingIndex(this._localZOrder++)\r\n        \r\n        panel.self=node\r\n\r\n        node.addComponent(prefab.data.name+\"Control\")\r\n\r\n        return 0\r\n    }\r\n\r\n    public closePrefab(uiName:string):number{\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n        if(!panel){\r\n            console.error(\"closePrefab !panel \",uiName)\r\n            return -1\r\n        }\r\n        if(!panel.open){\r\n            console.error(\"closePrefab !panel.open\",uiName)\r\n            return -2\r\n        }\r\n        panel.open=false\r\n        panel.opening=false\r\n        panel.closeTime=30\r\n\r\n        let node=panel.self\r\n        node.removeFromParent()\r\n\r\n        this._localZOrder--\r\n\r\n        return 0\r\n    }\r\n\r\n    public async showUI(uiName:string,parent?:any):Promise<cc.Node>{\r\n        let prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"UI/\"+uiName,cc.Prefab) as cc.Prefab\r\n        if(!prefab){\r\n            console.error(\"showUI error\",uiName)\r\n            return\r\n        }\r\n        parent=parent? parent:this._canvas\r\n\r\n        let node=cc.instantiate(prefab)\r\n        node.parent=parent\r\n\r\n        node.addComponent(prefab.data.name+\"Control\")\r\n\r\n        return node\r\n    }\r\n\r\n    async update(dt){\r\n        for(let uiName in this._allShowPanel){\r\n            let panel=this._allShowPanel[uiName] as Panel\r\n            if(panel.opening){\r\n                panel.open=true\r\n                panel.opening=false\r\n            }\r\n            else if(!panel.open){\r\n                if(panel.closeTime>0){\r\n                    panel.closeTime-=dt\r\n                }\r\n                else{\r\n                    let prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"UI/\"+uiName,cc.Prefab) as cc.Prefab\r\n                    let ts=panel.self.getComponent(prefab.data.name+\"Control\") as any\r\n                    if(ts){\r\n                        ts.cleanUp()\r\n                    }\r\n                    delete this._allShowPanel[uiName]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"]}