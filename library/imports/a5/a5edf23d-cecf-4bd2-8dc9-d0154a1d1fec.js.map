{"version":3,"sources":["assets\\FrameWork\\manager\\UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { ResManager } from './ResManager';\r\n\r\nclass Panel{\r\n    public prefab:cc.Prefab=null\r\n    public opening:boolean=false\r\n    public open:boolean=false\r\n    public closeTime:number=0\r\n    public self:cc.Node=null\r\n}\r\n/*\r\n1.代码中构建ui，驱动游戏\r\n2.ui身上挂载代码，驱动游戏\r\n*/\r\nexport class UIManager extends cc.Component {\r\n    public static _instance:UIManager=null\r\n    public static getInstance():UIManager{\r\n        return UIManager._instance\r\n    }\r\n    private _canvas:Node=null\r\n    private _allShowPanel={}\r\n    private _localZOrder=1000\r\n\r\n    onLoad(){\r\n        if(null==UIManager._instance){\r\n            UIManager._instance=this\r\n        }\r\n        else{\r\n            this.destroy()\r\n        }\r\n\r\n        this._canvas=cc.find(\"Canvas\") as unknown as Node\r\n    }\r\n\r\n    public getPrefabByName(uiName:string):cc.Node{\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n        if(panel){\r\n            return panel.self\r\n        }\r\n        return null\r\n    }\r\n\r\n    private createPrefab(uiName):cc.Prefab{\r\n        let prefab=ResManager.getInstance().getAssetByName(\"prefabs\",\"UI/\"+uiName) as cc.Prefab\r\n        if(!prefab){\r\n            console.error(\"createPrefab error\",uiName)\r\n            return null\r\n        }\r\n\r\n        return prefab\r\n    }\r\n\r\n    public createOnlyPrefab(uiName):cc.Prefab{\r\n        let prefab=this.createPrefab(uiName)\r\n\r\n        return prefab\r\n    }\r\n\r\n    public showPrefab(uiName:string):number{\r\n        if(!this._allShowPanel[uiName]){\r\n            this._allShowPanel[uiName]=new Panel()\r\n\r\n            let prefab=this.createPrefab(uiName)\r\n            this._allShowPanel[uiName].prefab=prefab\r\n        }\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n\r\n        if(panel.open){\r\n            return -1\r\n        }\r\n\r\n        panel.opening=true\r\n        panel.open=false\r\n        panel.closeTime=0\r\n\r\n        let prefab=panel.prefab as cc.Prefab\r\n        let node=cc.instantiate(prefab)\r\n        node.parent=this._canvas as any\r\n        node.setSiblingIndex(this._localZOrder++)\r\n        \r\n        panel.self=node\r\n\r\n        node.addComponent(prefab.data.name+\"Control\")\r\n\r\n        return 0\r\n    }\r\n\r\n    public closePrefab(uiName:string):number{\r\n        let panel=this._allShowPanel[uiName] as Panel\r\n        if(!panel){\r\n            console.error(\"closePrefab !panel \",uiName)\r\n            return -1\r\n        }\r\n        if(!panel.open){\r\n            console.error(\"closePrefab !panel.open\",uiName)\r\n            return -2\r\n        }\r\n        panel.open=false\r\n        panel.opening=false\r\n        panel.closeTime=30\r\n\r\n        let node=panel.self\r\n        node.removeFromParent()\r\n\r\n        this._localZOrder--\r\n\r\n        return 0\r\n    }\r\n\r\n    public showUI(uiName:string,parent?:any):cc.Node{\r\n        let prefab=ResManager.getInstance().getAssetByName(\"prefabs\",\"UI/\"+uiName) as cc.Prefab\r\n        if(!prefab){\r\n            console.error(\"showUI error\",uiName)\r\n            return\r\n        }\r\n        \r\n        parent=parent? parent:this._canvas\r\n\r\n        let node=cc.instantiate(prefab)\r\n        node.parent=parent\r\n\r\n        node.addComponent(prefab.data.name+\"Control\")\r\n\r\n        return node\r\n    }\r\n\r\n    update(dt){\r\n        for(let uiName in this._allShowPanel){\r\n            let panel=this._allShowPanel[uiName] as Panel\r\n            if(panel.opening){\r\n                panel.open=true\r\n                panel.opening=false\r\n            }\r\n            else if(!panel.open){\r\n                if(panel.closeTime>0){\r\n                    panel.closeTime-=dt\r\n                }\r\n                else{\r\n                    let prefab=ResManager.getInstance().getAssetByName(\"prefabs\",\"UI/\"+uiName) as cc.Prefab\r\n                    let ts=panel.self.getComponent(prefab.data.name+\"Control\") as any\r\n                    if(ts){\r\n                        ts.cleanUp()\r\n                    }\r\n                    delete this._allShowPanel[uiName]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"]}