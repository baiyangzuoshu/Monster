{"version":3,"sources":["assets\\FrameWork\\Utils\\util.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class util {\r\n    /**\r\n     * !#zh 拷贝object。\r\n     */\r\n    public static clone (sObj: any) {\r\n        if (sObj === null || typeof sObj !== \"object\") {\r\n            return sObj;\r\n        }\r\n\r\n        var s = {};\r\n        if (sObj.constructor === Array) {\r\n            s = [];\r\n        }\r\n\r\n        for (var i in sObj) {\r\n            if (sObj.hasOwnProperty(i)) {\r\n                s[i] = this.clone(sObj[i]);\r\n            }\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 将object转化为数组。\r\n     */\r\n    public static objectToArray (srcObj:Object) {\r\n\r\n        var resultArr = [];\r\n\r\n        // to array\r\n        for (var key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            resultArr.push(srcObj[key]);\r\n        }\r\n\r\n        return resultArr;\r\n    }\r\n\r\n    /**\r\n     * !#zh 将数组转化为object。\r\n     */\r\n    public static arrayToObject (srcObj: any, objectKey: any) {\r\n\r\n        var resultObj = {};\r\n\r\n        // to object\r\n        for (var key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key) || !srcObj[key][objectKey]) {\r\n                continue;\r\n            }\r\n\r\n            resultObj[srcObj[key][objectKey]] = srcObj[key];\r\n        }\r\n\r\n        return resultObj;\r\n    }\r\n\r\n    // 根据权重,计算随机内容\r\n    public static getWeightRandIndex (weightArr: any, totalWeight: number) {\r\n        var randWeight = Math.floor(Math.random() * totalWeight);\r\n        var sum = 0;\r\n        for (var weightIndex = 0; weightIndex < weightArr.length; weightIndex++) {\r\n            sum += weightArr[weightIndex];\r\n            if (randWeight < sum) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return weightIndex;\r\n    }\r\n\r\n    /**\r\n     * 从n个数中获取m个随机数\r\n     * @param {Number} n   总数\r\n     * @param {Number} m    获取数\r\n     * @returns {Array} array   获取数列\r\n     */\r\n    public static getRandomNFromM (n: number, m: number) {\r\n        var array = [];\r\n        var intRd = 0;\r\n        var count = 0;\r\n\r\n        while (count < m) {\r\n            if (count >= n + 1) {\r\n                break;\r\n            }\r\n\r\n            intRd = this.getRandomInt(0, n);\r\n            var flag = 0;\r\n            for (var i = 0; i < count; i++) {\r\n                if (array[i] === intRd) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (flag === 0) {\r\n                array[count] = intRd;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    public static getRandomInt (min: number, max: number) {\r\n        var r = Math.random();\r\n        var rr = r * (max - min + 1) + min;\r\n        return Math.floor(rr);\r\n    }\r\n\r\n    public static getStringLength (render: string) {\r\n        var strArr = render;\r\n        var len = 0;\r\n        for (var i = 0, n = strArr.length; i < n; i++) {\r\n            var val = strArr.charCodeAt(i);\r\n            if (val <= 255) {\r\n                len = len + 1;\r\n            } else {\r\n                len = len + 2;\r\n            }\r\n        }\r\n\r\n        return Math.ceil(len / 2);\r\n    }\r\n\r\n    /**\r\n     * 判断传入的参数是否为空的Object。数组或undefined会返回false\r\n     * @param obj\r\n     */\r\n    public static isEmptyObject (obj: any) {\r\n        var result = true;\r\n        if (obj && obj.constructor === Object) {\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static formatNum (num: number) {\r\n        // 0 和负数均返回 NaN。特殊处理。\r\n        if (num <= 0) {\r\n            return '0';\r\n        }\r\n\r\n        var k = 1000;\r\n        var sizes = ['', '', 'K', 'M', 'B'];\r\n        var i = Math.round(Math.log(num) / Math.log(k));\r\n        return parseInt((num / (Math.pow(k, i - 1 < 0 ? 0 : i - 1))).toString(), 10) + sizes[i];\r\n    }\r\n\r\n    /**\r\n     * 判断是否是新的一天\r\n     * @param {Object|Number} dateValue 时间对象 todo MessageCenter 与 pve 相关的时间存储建议改为 Date 类型\r\n     * @returns {boolean}\r\n     */\r\n    public static isNewDay (dateValue: any) {\r\n        // todo：是否需要判断时区？\r\n        var oldDate = new Date(dateValue);\r\n        var curDate = new Date();\r\n\r\n        var oldYear = oldDate.getFullYear();\r\n        var oldMonth = oldDate.getMonth();\r\n        var oldDay = oldDate.getDate();\r\n        var curYear = curDate.getFullYear();\r\n        var curMonth = curDate.getMonth();\r\n        var curDay = curDate.getDate();\r\n\r\n        if (curYear > oldYear) {\r\n            return true;\r\n        } else {\r\n            if (curMonth > oldMonth) {\r\n                return true;\r\n            } else {\r\n                if (curDay > oldDay) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static getPropertyCount(o: Object) {\r\n        var n, count = 0;\r\n        for (n in o) {\r\n            if (o.hasOwnProperty(n)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 返回一个差异化数组（将array中diff里的值去掉）\r\n     * @param array\r\n     * @param diff\r\n     */\r\n    public static difference (array: any, diff: any) {\r\n        var result = [];\r\n        if (array.constructor !== Array || diff.constructor !== Array) {\r\n            return result;\r\n        }\r\n\r\n        var length = array.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (diff.indexOf(array[i]) === -1) {\r\n                result.push(array[i]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    //public method for encoding\r\n    public static base64encode (input: string) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\r\n        input = this.utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    // private method for UTF-8 encoding\r\n    public static utf8Encode (string: string) {\r\n        string = string.replace(/\\r\\n/g,\"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    public static base64Decode (input: string) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1;\r\n        var chr2;\r\n        var chr3;\r\n        var enc1;\r\n        var enc2;\r\n        var enc3;\r\n        var enc4;\r\n        var i = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = this.utf8Decode(output);\r\n        return output;\r\n    }\r\n\r\n    public static utf8Decode (utftext: string) {\r\n        var string = \"\";\r\n        var i = 0;\r\n        var c = 0;\r\n        var c1 = 0;\r\n        var c2 = 0;\r\n        var c3 = 0;\r\n        while ( i < utftext.length ) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            } else if((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                c3 = utftext.charCodeAt(i+2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n\r\n    public static remove(array, predicate) {\r\n        var result = [];\r\n        var indexes = [];\r\n        array.forEach(function (item, index) {\r\n            if (predicate(item)) {\r\n                result.push(item);\r\n                indexes.push(index);\r\n            }\r\n        });\r\n\r\n        this.basePullAt(array, indexes);\r\n        return result;\r\n    }\r\n\r\n    public static basePullAt(array, indexes) {\r\n        var length = array ? indexes.length : 0;\r\n        var lastIndex = length - 1;\r\n        var previous;\r\n\r\n        while (length--) {\r\n            var index = indexes[length];\r\n            if (length === lastIndex || index !== previous) {\r\n                previous = index;\r\n                Array.prototype.splice.call(array, index, 1);\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    public static stringToArray (string: string) {\r\n        // 用于判断emoji的正则们\r\n        var rsAstralRange = '\\\\ud800-\\\\udfff';\r\n        var rsZWJ = '\\\\u200d';\r\n        var rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n        var rsComboMarksRange = '\\\\u0300-\\\\u036f';\r\n        var reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\r\n        var rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\r\n        var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\r\n        var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\r\n\r\n        var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\r\n        var rsOptVar = '[' + rsVarRange + ']?';\r\n        var rsCombo = '[' + rsComboRange + ']';\r\n        var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\r\n        var reOptMod = rsModifier + '?';\r\n        var rsAstral = '[' + rsAstralRange + ']';\r\n        var rsNonAstral = '[^' + rsAstralRange + ']';\r\n        var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\r\n        var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\r\n        var rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\r\n        var rsSeq = rsOptVar + reOptMod + rsOptJoin;\r\n        var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n        var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n        var hasUnicode = function (val) {\r\n            return reHasUnicode.test(val);\r\n        };\r\n\r\n        var unicodeToArray = function (val) {\r\n            return val.match(reUnicode) || [];\r\n        };\r\n\r\n        var asciiToArray = function (val) {\r\n            return val.split('');\r\n        };\r\n\r\n        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\r\n    }\r\n\r\n    // 模拟传msg的uuid\r\n    public static simulationUUID () {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n            s4() + '-' + s4() + s4() + s4();\r\n    }\r\n\r\n    public static trim (str: string) {\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n\r\n    /**\r\n     * 判断当前时间是否在有效时间内\r\n     * @param {String|Number} start 起始时间。带有时区信息\r\n     * @param {String|Number} end 结束时间。带有时区信息\r\n     */\r\n    public static isNowValid (start, end) {\r\n        var startTime = new Date(start);\r\n        var endTime = new Date(end);\r\n        var result = false;\r\n\r\n        if (startTime.getDate() + '' !== 'NaN' && endTime.getDate() + '' !== 'NaN') {\r\n            var curDate = new Date();\r\n            result = curDate < endTime && curDate > startTime;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static getDeltaDays (start, end) {\r\n        start = new Date(start);\r\n        end = new Date(end);\r\n\r\n        var startYear = start.getFullYear();\r\n        var startMonth = start.getMonth() + 1;\r\n        var startDate = start.getDate();\r\n        var endYear = end.getFullYear();\r\n        var endMonth = end.getMonth() + 1;\r\n        var endDate = end.getDate();\r\n\r\n        start = new Date(startYear + '/' + startMonth + '/' + startDate + ' GMT+0800').getTime();\r\n        end = new Date(endYear + '/' + endMonth + '/' + endDate + ' GMT+0800').getTime();\r\n\r\n        var deltaTime = end - start;\r\n        return Math.floor(deltaTime / (24 * 60 * 60 * 1000));\r\n    }\r\n\r\n    public static getMin (array) {\r\n        var result = null;\r\n        if (array.constructor === Array) {\r\n            var length = array.length;\r\n            for (var i = 0; i < length; i++) {\r\n                if (i === 0) {\r\n                    result = Number(array[0]);\r\n                } else {\r\n                    result = result > Number(array[i]) ? Number(array[i]) : result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static formatTwoDigits (time) {\r\n        return (Array(2).join(\"0\")+time).slice(-2);\r\n    }\r\n\r\n    public static formatDate (date, fmt) {\r\n        var o = {\r\n            \"M+\": date.getMonth() + 1, //月份\r\n            \"d+\": date.getDate(), //日\r\n            \"h+\": date.getHours(), //小时\r\n            \"m+\": date.getMinutes(), //分\r\n            \"s+\": date.getSeconds(), //秒\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\r\n            \"S\": date.getMilliseconds() //毫秒\r\n        };\r\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        for (var k in o)\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n        return fmt;\r\n    }\r\n\r\n    /**\r\n     * 获取格式化后的日期（不含小时分秒）\r\n     */\r\n    public static getDay () {\r\n        var date = new Date();\r\n\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();\r\n    }\r\n\r\n    public static formatName (name, limit) {\r\n        limit = limit || 6;\r\n        var nameArray = this.stringToArray(name);\r\n        var str = '';\r\n        var length = nameArray.length;\r\n        if (length > limit) {\r\n            for (var i = 0; i < limit; i++) {\r\n                str += nameArray[i];\r\n            }\r\n\r\n            str += '...';\r\n        } else {\r\n            str = name;\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\r\n     */\r\n    public static formatMoney (money: number) {\r\n        var arrUnit = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\r\n\r\n        var strValue = '';\r\n        for (var idx = 0; idx < arrUnit.length; idx++) {\r\n            if (money >= 10000) {\r\n                money /= 1000;\r\n            } else {\r\n                strValue = Math.floor(money) + arrUnit[idx];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (strValue === '') {\r\n            strValue = Math.floor(money) + 'U'; //超过最大值就加个U\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    public static formatValue (value: number) {\r\n        let arrUnit = []\r\n        let strValue = '';\r\n        for(let i=0;i<26;i++){\r\n            arrUnit.push(String.fromCharCode(97+i));\r\n        }\r\n\r\n        for (let idx = 0; idx < arrUnit.length; idx++) {\r\n            if (value >= 10000) {\r\n                value /= 1000;\r\n            } else {\r\n                strValue = Math.floor(value) + arrUnit[idx]; \r\n                break;      \r\n            }\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    /**\r\n     * 根据剩余秒数格式化剩余时间 返回 HH:MM:SS\r\n     * @param {Number} leftSec \r\n     */\r\n    public static formatTimeForSecond (leftSec: number, withoutSeconds: boolean = false) {\r\n        var timeStr = '';\r\n        var sec = leftSec % 60;\r\n    \r\n        var leftMin = Math.floor(leftSec / 60);\r\n        leftMin = leftMin < 0 ? 0 : leftMin;\r\n    \r\n        var hour = Math.floor(leftMin / 60);\r\n        var min = leftMin % 60;\r\n    \r\n        if (hour > 0) {\r\n            timeStr += hour > 9 ? hour.toString() : '0' + hour;\r\n            timeStr += ':';\r\n        } else {\r\n            timeStr += '00:';\r\n        }\r\n        \r\n        timeStr += min > 9 ? min.toString() : '0' + min;\r\n\r\n        if (!withoutSeconds) {\r\n            timeStr += ':';\r\n            timeStr += sec > 9 ? sec.toString() : '0' + sec;\r\n        }\r\n       \r\n        return timeStr;\r\n    }\r\n\r\n    /**\r\n     *  根据剩余毫秒数格式化剩余时间 返回 HH:MM:SS\r\n     *\r\n     * @param {Number} ms\r\n     */\r\n    public static formatTimeForMillisecond(ms: number): Object {\r\n        let second = Math.floor(ms / 1000 % 60);\r\n        let minute = Math.floor(ms / 1000 / 60 % 60);\r\n        let hour = Math.floor(ms / 1000 / 60 / 60);\r\n        // let strSecond = second < 10 ? '0' + second : second;\r\n        // let strMinute = minute < 10 ? '0' + minute : minute;\r\n        // let strHour = hour < 10 ? '0' + hour : hour;\r\n        // return `${strSecond}:${strMinute}:${strHour}`;\r\n        return {'hour': hour, 'minute': minute, 'second': second };\r\n    }\r\n\r\n    /**\r\n     * TODO 需要将pako进行引入，目前已经去除了压缩算法的需要，如需要使用需引入库文件\r\n     * 将字符串进行压缩\r\n     * @param {String} str \r\n     */\r\n    public static zip (str) {\r\n        var binaryString = pako.gzip(encodeURIComponent(str), { to: 'string' });\r\n        return this.base64encode(binaryString);\r\n    }\r\n\r\n    /**\r\n     * todo 目前已经去除了压缩算法的需要，如需要使用需引入库文件\r\n     * 将数据进行解压\r\n     * @param {String} b64Data \r\n     */\r\n    public static unZip (b64Data) {\r\n        var strData   = this.base64Decode(b64Data);\r\n        // Convert binary string to character-number array\r\n        var charData  = strData.split('').map(function(x){return x.charCodeAt(0);});\r\n        // Turn number array into byte-array\r\n        var binData   = new Uint8Array(charData);\r\n        // // unzip\r\n        var data    = pako.inflate(binData);\r\n        // Convert gunzipped byteArray back to ascii string:\r\n        strData   = String.fromCharCode.apply(null, new Uint16Array(data));\r\n        return decodeURIComponent(strData);\r\n    }\r\n\r\n    /**\r\n     * 数据加密\r\n     * @param {String} str \r\n     */\r\n    public static encrypt (str) {\r\n        let b64Data = this.base64encode(str);\r\n\r\n        let n = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let encodeData = '';\r\n\r\n        for (let idx = 0; idx < (b64Data.length - n + 1) / 2; idx++) {\r\n            encodeData += b64Data[2*idx+1];\r\n            encodeData += b64Data[2*idx];\r\n        }\r\n\r\n        encodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        return encodeData;\r\n    }\r\n\r\n    /**\r\n     * 数据解密\r\n     * @param {String} b64Data \r\n     */\r\n    public static decrypt (b64Data) {\r\n        let n = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let decodeData = '';\r\n        for (var idx = 0; idx < b64Data.length - n; idx += 2) {\r\n            decodeData += b64Data[idx + 1];\r\n            decodeData += b64Data[idx];\r\n        }\r\n\r\n        decodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        decodeData = this.base64Decode(decodeData);\r\n\r\n        return decodeData;\r\n    }\r\n\r\n    public static rand(arr: []): [] {\r\n        let arrClone = this.clone(arr);\r\n        // 首先从最大的数开始遍历，之后递减\r\n        for (let i = arrClone.length - 1; i >= 0; i--) {\r\n            // 随机索引值randomIndex是从0-arrClone.length中随机抽取的\r\n            const randomIndex = Math.floor(Math.random() * (i + 1));\r\n            // 下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\r\n            const itemIndex = arrClone[randomIndex];\r\n            arrClone[randomIndex] = arrClone[i];\r\n            arrClone[i] = itemIndex;\r\n        }\r\n        // 每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\r\n        return arrClone;\r\n    }\r\n\r\n    /**\r\n     * 获得开始和结束两者之间相隔分钟数\r\n     *\r\n     * @static\r\n     * @param {number} start\r\n     * @param {number} end\r\n     * @memberof Util\r\n     */\r\n    public static getOffsetMimutes (start: number, end: number) {\r\n        let offSetTime = end - start;\r\n        let minute = Math.floor((offSetTime % (1000 * 60 * 60)) / (1000 * 60));\r\n        return minute;\r\n    }\r\n\r\n    /**\r\n     * 返回指定小数位的数值\r\n     * @param num \r\n     * @param idx \r\n     */\r\n    public static formatNumToFixed (num: number, idx: number = 0) {\r\n        return Number(num.toFixed(idx));\r\n    }\r\n\r\n    public static lerp (targetValue: number, curValue: number, ratio: number = 0.25) {\r\n        let v = curValue;\r\n        if (targetValue > curValue) {\r\n            v = curValue + (targetValue - curValue) * ratio;\r\n        } else if (targetValue < curValue) {\r\n            v = curValue - (curValue - targetValue) * ratio;\r\n        }\r\n        \r\n        return v;\r\n    }\r\n}\r\n"]}