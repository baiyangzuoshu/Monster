{"version":3,"sources":["assets\\FrameWork\\manager\\Net\\NetManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { EventManager } from '../EventManager';\r\n\r\nenum State {\r\n    Disconnected = 0, // 断开连接\r\n    Connecting = 1, // 正在连接\r\n    Connected = 2, // 已经连接;\r\n};\r\n\r\nexport class NetManager extends cc.Component {\r\n    private static _instance: NetManager = null as unknown as NetManager;\r\n    public static getInstance():NetManager{\r\n        return NetManager._instance\r\n    }\r\n    private url: string = \"ws://127.0.0.1:6081/ws\";\r\n\r\n    private state: number = State.Disconnected;\r\n    private sock: WebSocket|null = null;\r\n\r\n    onLoad(): void {\r\n        if(NetManager._instance === null) {\r\n            NetManager._instance = this;\r\n        }\r\n        else {\r\n            this.destroy();\r\n            return;\r\n        }\r\n\r\n        this.state = State.Disconnected;\r\n    }\r\n\r\n    public Init(url: string): void {\r\n        \r\n        this.url = url;\r\n        this.state = State.Disconnected;\r\n    }\r\n\r\n    public send_data(data_arraybuf: ArrayBuffer) {\r\n        if (this.state === State.Connected && this.sock) {\r\n            this.sock.send(data_arraybuf);\r\n        }\r\n    }\r\n\r\n    private connect_to_server(): void {\r\n        if (this.state !== State.Disconnected) {\r\n            return;\r\n        }\r\n\r\n        // 抛出一个正在重新连接的事件;\r\n        EventManager.getInstance().emit(\"net_connecting\", null);\r\n\r\n        this.state = State.Connecting;\r\n        this.sock = new WebSocket(this.url); // H5标准，底层做好了;\r\n        this.sock.binaryType = \"arraybuffer\"; // blob, 二进制;\r\n\r\n        this.sock.onopen = this._on_opened.bind(this);\r\n        this.sock.onmessage = this._on_recv_data.bind(this);\r\n        this.sock.onclose = this._on_socket_close.bind(this);\r\n        this.sock.onerror = this._on_socket_err.bind(this);\r\n    }\r\n\r\n    private _on_recv_data(event: any) {\r\n        EventManager.getInstance().emit(\"net_message\", event.data);\r\n    }\r\n\r\n    private _on_socket_close(event: any) {\r\n        this.close_socket();\r\n    }\r\n\r\n    private _on_socket_err(event: any) {\r\n        this.close_socket();\r\n    }\r\n\r\n    public close_socket() {\r\n        if (this.state === State.Connected) {\r\n            if (this.sock !== null) {\r\n                this.sock.close();\r\n                this.sock = null;\r\n            }\r\n        }\r\n        EventManager.getInstance().emit(\"net_disconnect\", null);\r\n        this.state = State.Disconnected;\r\n    }\r\n\r\n    // 连接成功了\r\n    private _on_opened(event: any) {\r\n        this.state = State.Connected;\r\n        console.log(\"connect to server: \" + this.url + \" sucess!\");\r\n        EventManager.getInstance().emit(\"net_connect\", null);\r\n    }\r\n\r\n    update (dt: number) {\r\n        if (this.state !== State.Disconnected) {\r\n            return;\r\n        }\r\n\r\n        this.connect_to_server();\r\n    }\r\n}\r\n"]}