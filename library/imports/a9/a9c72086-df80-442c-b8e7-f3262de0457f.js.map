{"version":3,"sources":["assets\\FrameWork\\manager\\ExcelManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nimport CSV from \"./../3rd/CSVParser\";\r\n\r\nexport class ExcelManager extends cc.Component {\r\n    private static _instance: ExcelManager = null!;\r\n    public static getInstance():ExcelManager{\r\n        return ExcelManager._instance\r\n    }\r\n\r\n    private csvTables: any = {};\r\n    private csvTableForArr:any = {};\r\n\r\n    private tableCast:any = {};\r\n    private tableComment:any = {};\r\n    \r\n\r\n    onLoad(): void {\r\n        if(ExcelManager._instance === null) {\r\n            ExcelManager._instance = this;\r\n        }\r\n        else {\r\n            this.destroy();\r\n            return;\r\n        }\r\n    }\r\n\r\n    // 添加一个表格到我们的表格管理里面来;\r\n    // excelName: 表格的名字;\r\n    // tableContent: 表格的文本内容;\r\n    // force: 同名的表格文件，\r\n    // 如果是同名的,我们如果是force 为true那么我们就替换，否则我们就直接返回用原来的;\r\n    public AddExcelTable(excelName: string, tableContent: string, force?:boolean): void {\r\n        if(this.csvTables[excelName] && !force) {\r\n            return;\r\n        }\r\n\r\n        var tableData = {};\r\n        var tableArr = []; \r\n\r\n        var opts = { header: true };\r\n        CSV.parse(tableContent, opts, function (row, keyname) {\r\n            // row: 这一行的object对象; { ID: 4, type: 3, mapName:  \"map004\", ...}\r\n            // keyname: 就是我们的主键;\r\n            tableData[row[keyname]] = row;\r\n            tableArr.push(row);\r\n        });\r\n\r\n        this.tableCast[excelName] = (CSV as any).opts.cast; \r\n        this.tableComment[excelName] = (CSV as any).opts.comment;\r\n\r\n        this.csvTables[excelName] = tableData; // 主键值---》rowObject\r\n        this.csvTableForArr[excelName] = tableArr;\r\n    }\r\n\r\n    // 返回的是我们查询到的数据\r\n    // 满足条件有一条，满足条件有多条\r\n    // excelName: 表格的名字\r\n    // key: 查询字段的名字\r\n    // value: 查询字段的值\r\n    // return: 第一条满足条件的记录\r\n    public QueryOneFromExcel(excelName: string, key: string, value: any): any {\r\n        var table = this.GetExcelObject(excelName);\r\n        if (!table) {\r\n            return null;\r\n        }\r\n        if (key) { // 普通键\r\n            for (var tbItem in table) {\r\n                if (!table.hasOwnProperty(tbItem)) {\r\n                    continue;\r\n                }\r\n\r\n                if (table[tbItem][key] === value) {\r\n                    return table[tbItem];\r\n                }\r\n            }\r\n            \r\n        } else { // value当作我们的主键来查询;\r\n            return table[value];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public QueryAllFromExcel(excelName: string, key: string, value: any): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    public GetExcelArray(excelName: string): Array<any> {\r\n        return this.csvTableForArr[excelName];\r\n    }\r\n\r\n    // {主键值1:  line对象, 主键值2: line对象}\r\n    public GetExcelObject(excelName: string): any {\r\n        return this.csvTables[excelName];\r\n    }\r\n}\r\n\r\n\r\n"]}