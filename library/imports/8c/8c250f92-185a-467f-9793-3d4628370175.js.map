{"version":3,"sources":["assets\\Scripts\\ECS\\ECSManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport ECSFactory from \"./ECSFactory\";\nimport CannonEntitiy from \"./Entities/CannonEntitiy\";\nimport MonsterEntity from \"./Entities/MonsterEntity\";\nimport AnimateSystem from \"./Systems/AnimateSystem\";\nimport NavSystem from \"./Systems/NavSystem\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ECSManager extends cc.Component {\n\n    private static _instance:ECSManager=null\n    public static getInstance():ECSManager{\n        return ECSManager._instance\n    }\n\n    onLoad () {\n        if(null===ECSManager._instance){\n            ECSManager._instance=this\n        }\n        else{\n            this.destroy()\n            return\n        }\n    }\n\n    private monsters:Array<MonsterEntity>=[];\n    private cannones:Array<CannonEntitiy>=[];\n\n    async createMonsterEntity(type,index,list,hp,gold,speed){\n        let entity=await ECSFactory.getInstance().createMonsterEntity(type,index,list,hp,gold,speed);\n        this.monsters.push(entity);\n\n        return entity\n    }\n\n    public async createCannonEntity(index:number,level:number){\n        let entity=await ECSFactory.getInstance().createCannonEntity(index,level);\n        this.cannones.push(entity);\n        \n        return entity\n    }\n\n    navSystemMonster(dt:number){\n        for(let i=0;i<this.monsters.length;i++){\n            NavSystem.getInstance().onUpdate(dt,this.monsters[i].navComponent,this.monsters[i].baseComponent,this.monsters[i].transformComponent);\n        }\n    }\n\n    animateSystemMonster(dt:number){\n        for(let i=0;i<this.monsters.length;i++){\n            AnimateSystem.getInstance().onUpdate(dt,this.monsters[i].baseComponent,this.monsters[i].roleComponent,this.monsters[i].animateComponent);\n        }\n    }\n\n    protected update(dt: number): void {\n        //怪物行走\n        this.navSystemMonster(dt);\n        //怪物动画\n        this.animateSystemMonster(dt);\n    }\n}\n"]}