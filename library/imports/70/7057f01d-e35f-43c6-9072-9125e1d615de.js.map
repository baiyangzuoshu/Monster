{"version":3,"sources":["assets\\Scripts\\ECS\\Systems\\AISystem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport utils = require(\"markdown-it/lib/common/utils\");\nimport { util } from \"../../../FrameWork/Utils/util\";\nimport { GameState, SkillBuffer } from \"../../Enum\";\nimport BaseComponent from \"../Components/BaseComponent\";\nimport RoleComponent from \"../Components/RoleComponent\";\nimport TransformComponent from \"../Components/TransformComponent\";\nimport UnitComponent from \"../Components/UnitComponent\";\nimport ECSManager from \"../ECSManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class AISystem extends cc.Component {\n    private static _instance:AISystem=null\n    public static getInstance():AISystem{\n        return AISystem._instance\n    }\n\n    onLoad () {\n        if(null===AISystem._instance){\n            AISystem._instance=this\n        }\n        else{\n            this.destroy()\n            return\n        }\n    }\n\n    async onCannonUpdate(dt,unitComponent:UnitComponent,baseComponent:BaseComponent,roleComponent:RoleComponent) {\n        if(unitComponent.state != GameState.Active){\n            return\n        }\n        \n        if( unitComponent.m_attackTarget == null){\n            unitComponent.m_attackTarget = ECSManager.getInstance().calcNearDistance(baseComponent.gameObject);\n        }\n        if( unitComponent.m_attackTarget != null){\n            if( unitComponent.isDead ){\n                unitComponent.m_attackTarget=null;\n                return;\n            }\n            let src=cc.v3(unitComponent.m_attackTarget.getPosition().x,unitComponent.m_attackTarget.getPosition().y,0)\n            let dst=cc.v3(baseComponent.gameObject.x,baseComponent.gameObject.y,0)\n            let dir=cc.v3()\n            cc.Vec3.subtract(dir,src,dst)\n            var dis = dir.len();\n            //cc.log(dis);\n            var curDis = 230;\n            Math.abs(dis);\n            if(dis > curDis ){\n                unitComponent.m_attackTarget=null;\n                return;\n            }\n            var start = baseComponent.gameObject.getPosition();\n            var end = unitComponent.m_attackTarget.getPosition();\n            var angle = util.getAngle(start,end);\n            angle += 360;\n            angle -= 90;\n\n            unitComponent.fireTime-=dt;\n\n            if( unitComponent.fireTime>0 ){\n                unitComponent.angle=angle;\n                baseComponent.gameObject.getChildByName(\"gun\").angle=unitComponent.angle;\n            }else{\n                var moveAngle = 300*dt;\n                if( unitComponent.angle > angle || \n                    angle - unitComponent.angle > 180 ){\n                    moveAngle = -moveAngle;\n                }\n\n                unitComponent.angle += moveAngle;\n                baseComponent.gameObject.getChildByName(\"gun\").angle=unitComponent.angle;\n\n                if( unitComponent.angle < 0 ) {\n                    unitComponent.angle += 360;\n                    baseComponent.gameObject.getChildByName(\"gun\").angle=unitComponent.angle;\n                }\n\n                if( Math.abs(unitComponent.angle - angle) < Math.abs(moveAngle) ){\n                    unitComponent.fireTime = 1.0;\n                    \n                    let worldPos=baseComponent.gameObject.getChildByName(\"gun\").convertToWorldSpaceAR(cc.v3(0,0,0));\n                    await ECSManager.getInstance().createBulletEntity(roleComponent.level,worldPos,unitComponent.m_attackTarget,unitComponent.angle);\n\n                    baseComponent.gameObject.getChildByName(\"gun\").angle=angle;\n                    unitComponent.angle=angle;\n\n                    unitComponent.m_attackTarget=null;\n                }\n            }\n        }\n    }\n\n    onBulletUpdate(dt:number,unitComponent:UnitComponent,baseComponent:BaseComponent,transformComponent:TransformComponent,roleComponent:RoleComponent){\n        if( unitComponent.isDead || unitComponent.m_attackTarget == null ){\n            return;\n        }\n        \n        if(6==roleComponent.type||4==roleComponent.type||2==roleComponent.type||0==roleComponent.type){\n            var move = 500*dt;\n\n            var target = unitComponent.m_attackTarget;\n            var targetH = target.height;\n            var moveToPos = target.getPosition();\n            moveToPos.y += targetH/2;\n            var angle = util.getAngle(baseComponent.gameObject.getPosition(),moveToPos);\n            \n            var x = Math.cos(angle * (Math.PI/180)) * move ;\n            var y = Math.sin(angle * (Math.PI/180)) * move ;\n    \n            baseComponent.gameObject.x += x;\n            baseComponent.gameObject.y += y;\n    \n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n        }\n        else if(1==roleComponent.type){\n           \n            var target = unitComponent.m_attackTarget;\n            var targetPos = target.getPosition();\n    \n            var bulletPos = baseComponent.gameObject.convertToWorldSpaceAR(cc.v2(0,0));\n            var targetPos = target.convertToWorldSpaceAR(cc.v2(0,0));\n    \n            var targetH = target.height;\n            targetPos.y += targetH/2;\n            var angle = util.getAngle(bulletPos,targetPos);\n            this.node.angle = angle;\n            let dir=cc.v3()\n            cc.Vec3.subtract(dir,cc.v3(targetPos.x,targetPos.y),cc.v3(bulletPos.x,bulletPos.y))\n            var dis = dir.len();\n    \n            dis = Math.abs(dis);\n        }\n        else if(3==roleComponent.type){\n            \n            var move = 500*dt;\n\n            var target = unitComponent.m_attackTarget;\n            var targetH = target.height;\n            var moveToPos = target.getPosition();\n            moveToPos.y += targetH/2;\n            var angle = util.getAngle(baseComponent.gameObject.getPosition(),moveToPos);\n            \n            var x = Math.cos(angle * (Math.PI/180)) * move ;//+ this._playerNode.x;\n            var y = Math.sin(angle * (Math.PI/180)) * move ;//+ this._playerNode.y;\n\n            baseComponent.gameObject.angle = angle - 90;\n\n            baseComponent.gameObject.x += x;\n            baseComponent.gameObject.y += y;\n\n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n        }\n        \n    }\n}\n"]}