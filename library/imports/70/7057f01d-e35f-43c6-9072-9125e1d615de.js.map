{"version":3,"sources":["assets\\Scripts\\ECS\\Systems\\AISystem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport { util } from \"../../../FrameWork/Utils/util\";\nimport { BulletState } from \"../../Enum\";\nimport AnimateComponent from \"../Components/AnimateComponent\";\nimport BaseComponent from \"../Components/BaseComponent\";\nimport RoleComponent from \"../Components/RoleComponent\";\nimport TransformComponent from \"../Components/TransformComponent\";\nimport UnitComponent from \"../Components/UnitComponent\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class AISystem extends cc.Component {\n    private static _instance:AISystem=null\n    public static getInstance():AISystem{\n        return AISystem._instance\n    }\n\n    onLoad () {\n        if(null===AISystem._instance){\n            AISystem._instance=this\n        }\n        else{\n            this.destroy()\n            return\n        }\n    }\n\n    onBulletUpdate(dt:number,unitComponent:UnitComponent,baseComponent:BaseComponent,transformComponent:TransformComponent,roleComponent:RoleComponent,animateComponent:AnimateComponent){\n        if( unitComponent.isDead || unitComponent.attackEntity == null ||animateComponent.state!=BulletState.Attack){\n            return;\n        }\n        \n        if(6==roleComponent.type||4==roleComponent.type||2==roleComponent.type||0==roleComponent.type){\n            var move = 500*dt;\n            var target = unitComponent.attackEntity.baseComponent.gameObject;\n            var targetH = target.height;\n            var moveToPos = target.getPosition();\n            moveToPos.y += targetH/2;\n            var angle = util.getAngle(baseComponent.gameObject.getPosition(),moveToPos);\n            \n            var x = Math.cos(angle * (Math.PI/180)) * move ;\n            var y = Math.sin(angle * (Math.PI/180)) * move ;\n    \n            baseComponent.gameObject.x += x;\n            baseComponent.gameObject.y += y;\n    \n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n        }\n        else if(1==roleComponent.type){\n            var target = unitComponent.attackEntity.baseComponent.gameObject;\n            var targetPos = target.getPosition();\n    \n            var bulletPos = baseComponent.gameObject.convertToWorldSpaceAR(cc.v2(0,0));\n            var targetPos = target.convertToWorldSpaceAR(cc.v2(0,0));\n    \n            var targetH = target.height;\n            targetPos.y += targetH/2;\n            var angle = util.getAngle(bulletPos,targetPos);\n            this.node.angle = angle;\n            let dir=cc.v3()\n            cc.Vec3.subtract(dir,cc.v3(targetPos.x,targetPos.y),cc.v3(bulletPos.x,bulletPos.y))\n            var dis = dir.len();\n    \n            dis = Math.abs(dis);\n        }\n        else if(3==roleComponent.type){\n            var move = 500*dt;\n            var target = unitComponent.attackEntity.baseComponent.gameObject;\n            var targetH = target.height;\n            var moveToPos = target.getPosition();\n            moveToPos.y += targetH/2;\n            var angle = util.getAngle(baseComponent.gameObject.getPosition(),moveToPos);\n            \n            var x = Math.cos(angle * (Math.PI/180)) * move ;//+ this._playerNode.x;\n            var y = Math.sin(angle * (Math.PI/180)) * move ;//+ this._playerNode.y;\n\n            baseComponent.gameObject.angle = angle - 90;\n\n            baseComponent.gameObject.x += x;\n            baseComponent.gameObject.y += y;\n\n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n        }\n        \n    }\n}\n"]}