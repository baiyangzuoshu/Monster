{"version":3,"sources":["assets\\FrameWork\\Utils\\frame_animation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAqC,mCAAY;IAAjD;QAAA,qEAwGC;QAvGG,cAAQ,GAAS,GAAG,CAAA,CAAC,SAAS;QAC9B,UAAI,GAAU,KAAK,CAAA,CAAC,SAAS;QAC7B,iBAAW,GAAU,KAAK,CAAA,CAAC,gBAAgB;QAC3C,YAAM,GAAW,IAAI,CAAA;QACrB,gBAAU,GAAS,KAAK,CAAA;QACxB,eAAS,GAAQ,CAAC,CAAA;QAClB,aAAO,GAAS,KAAK,CAAA;QACrB,cAAQ,GAAU,IAAI,CAAA;;IAgG1B,CAAC;IA9FE,8BAA8B;IAC7B,gCAAM,GAAN;QACI,iCAAiC;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,EAAE,EAAE,0DAA0D;YACpE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,OAAO;QAC5B,OAAO;IACX,CAAC;IAED,8BAAI,GAAJ;QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,UAAU;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,cAAc;QACd,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACxB;iBACI;gBACD,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;SACJ;IACL,CAAC;IAED,UAAU;IACV,mCAAS,GAAT,UAAU,QAAiB;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACD,OAAO;IAEP,SAAS;IACT,mCAAS,GAAT;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,OAAO;IAEP,mCAAS,GAAT;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,0EAA0E;IAC1E,kCAAkC;IAClC,gCAAM,GAAN,UAAO,EAAE;QACL,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE,EAAE,cAAc;YAC3C,OAAO;SACV;QAED,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,aAAa;QAEpC,0BAA0B;QAC1B,sCAAsC;QACtC,4BAA4B;QAE3B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ;QAChE,QAAQ;QACR,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE,EAAE,OAAO;YACjC,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,UAAU;gBAChD,cAAc;gBACd,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC5E,OAAO;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS;oBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACnB;gBACD,OAAO;aACV;iBACI;gBACD,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aACvD;SACJ;aACI,EAAE,QAAQ;YAEX,OAAO,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;gBACnC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aACjE;YAED,YAAY;YACZ,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpD,OAAO;SACV;IACL,CAAC;IAvGQ,eAAe;QAD3B,OAAO;OACK,eAAe,CAwG3B;IAAD,sBAAC;CAxGD,AAwGC,CAxGoC,EAAE,CAAC,SAAS,GAwGhD;AAxGY,0CAAe","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class frame_animation extends cc.Component {\r\n    duration:number= 0.1 // 帧的时间间隔\r\n    loop:boolean= false // 是否循环播放\r\n    play_onload:boolean= false // 是否在组件加载的时候播放;\r\n    sprite:cc.Sprite=null\r\n    is_playing:boolean=false\r\n    play_time:number=0\r\n    is_loop:boolean=false\r\n    end_func:Function=null\r\n    sprite_frames:Array<cc.SpriteFrame>\r\n   // use this for initialization\r\n    onLoad() {\r\n        // 判断一下在组件所挂在的节点上面有没有cc.Sprite组件；\r\n        var s_com = this.node.getComponent(cc.Sprite);\r\n        if (!s_com) { // 没有cc.Sprite组件，要显示图片一定要有cc.Sprite组件,所以我们添加一个cc.Sprite组件;\r\n            s_com = this.node.addComponent(cc.Sprite);\r\n        }\r\n        this.sprite = s_com; // 精灵组件\r\n        // end \r\n    }\r\n\r\n    init(){\r\n        this.is_playing = false; // 是否正在播放;\r\n        this.play_time = 0;\r\n        this.is_loop = false;\r\n        this.end_func = null;\r\n        // 显示第0个frame;\r\n        this.sprite.spriteFrame = this.sprite_frames[0];\r\n        if (this.play_onload) {\r\n            if (!this.loop) {\r\n                this.play_once(null);    \r\n            }\r\n            else {\r\n                this.play_loop();\r\n            }\r\n        }\r\n    }\r\n    \r\n    // 实现播放一次,\r\n    play_once(end_func:Function) {\r\n        this.play_time = 0;\r\n        this.is_playing = true;\r\n        this.is_loop = false;\r\n        this.end_func = end_func;\r\n    }\r\n    // end \r\n    \r\n    // 实现循环播放\r\n    play_loop() {\r\n        this.play_time = 0;\r\n        this.is_playing = true;\r\n        this.is_loop = true;\r\n    }\r\n    // end \r\n    \r\n    stop_anim() {\r\n        this.play_time = 0;\r\n        this.is_playing = false;\r\n        this.is_loop = false;\r\n    }\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    // 每一次刷新的时候需要调用的函数，dt距离上一次刷新过去的时间;\r\n    update(dt) {\r\n        if (this.is_playing === false) { // 没有启动播放，不做处理\r\n            return;\r\n        }\r\n        \r\n        this.play_time += dt; // 累积我们播放的时间;\r\n        \r\n       // 计算时间，应当播放第几帧，而不是随便的下一帧，\r\n       // 否则的话，同样的动画1, 60帧，你在30FPS的机器上你会播放2秒，\r\n       // 你在60FPS的机器上你会播放1秒，动画就不同步;\r\n       \r\n        var index = Math.floor(this.play_time / this.duration); // 向下取整数\r\n        // index\r\n        if (this.is_loop === false) { // 播放一次\r\n            if (index >= this.sprite_frames.length) { // 非循环播放结束\r\n                // 精灵显示的是最后一帧;\r\n                this.sprite.spriteFrame = this.sprite_frames[this.sprite_frames.length - 1];\r\n                // end \r\n                this.is_playing = false;\r\n                this.play_time = 0;\r\n                if (this.end_func) { // 调用回掉函数\r\n                    this.end_func();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                this.sprite.spriteFrame = this.sprite_frames[index];\r\n            }\r\n        }\r\n        else { // 循环播放;\r\n            \r\n            while (index >= this.sprite_frames.length) {\r\n                index -= this.sprite_frames.length;\r\n                this.play_time -= (this.duration * this.sprite_frames.length);\r\n            }\r\n            \r\n            //  在合法的范围之内\r\n            this.sprite.spriteFrame = this.sprite_frames[index];\r\n            // end \r\n        }\r\n    }\r\n}\r\n\r\n"]}