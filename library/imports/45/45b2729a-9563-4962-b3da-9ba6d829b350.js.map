{"version":3,"sources":["assets\\FrameWork\\manager\\Net\\ProtoManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA;IAAkC,gCAAY;IAA9C;QAAA,qEA0CC;QArCG,cAAc;QACN,gBAAU,GAAsB,IAAI,CAAC;QAE7C,4BAA4B;QACpB,QAAE,GAAQ,IAAI,CAAC;;IAiC3B,CAAC;IAxCiB,wBAAW,GAAzB;QACI,OAAO,YAAY,CAAC,QAAQ,CAAA;IAChC,CAAC;IAOM,2BAAI,GAAX,UAAY,KAAwB;QAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACxB,CAAC;IAED,6BAAM,GAAN;QACI,IAAG,YAAY,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC/B,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;SAChC;aACI;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO;SACV;IACL,CAAC;IAEM,mCAAY,GAAnB,UAAoB,OAAe,EAAE,OAAY;QAC7C,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAElC,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,qCAAc,GAArB,UAAsB,OAAe,EAAE,MAAkB;QACrD,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QAE3B,OAAO,GAAG,CAAC;IACf,CAAC;IAxCc,qBAAQ,GAAiB,IAA+B,CAAC;IAyC5E,mBAAC;CA1CD,AA0CC,CA1CiC,EAAE,CAAC,SAAS,GA0C7C;AA1CY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\n\r\ndeclare const protobuf: any;\r\n\r\nexport class ProtoManager extends cc.Component {\r\n    private static _intance: ProtoManager = null as unknown as ProtoManager;\r\n    public static getInstance():ProtoManager{\r\n        return ProtoManager._intance\r\n    }\r\n    // 协议描述文件的文本对象\r\n    private pbTexAsset: cc.TextAsset|null = null;\r\n\r\n    // 根据协议描述文本对象，我们生成一个动态解析的对象;\r\n    private pb: any = null;\r\n\r\n    public Init(pbTex: cc.TextAsset|null): void {\r\n        this.pbTexAsset = pbTex;\r\n        this.pb = protobuf.parse(this.pbTexAsset);\r\n        console.log(this.pbTexAsset)\r\n        console.log(this.pb)\r\n    }\r\n\r\n    onLoad(): void {\r\n        if(ProtoManager._intance === null) {\r\n            ProtoManager._intance = this;\r\n        }\r\n        else {\r\n            this.destroy();\r\n            return;\r\n        }\r\n    }\r\n\r\n    public SerializeMsg(msgName: string, msgBody: any): Uint8Array {\r\n        let rs = this.pb.root.lookupType(msgName);\r\n        let msg = rs.create(msgBody);\r\n        let buf = rs.encode(msg).finish();\r\n\r\n        return buf;\r\n    }\r\n\r\n    public DeserializeMsg(msgName: string, msgBuf: Uint8Array): Object {\r\n        let rs = this.pb.root.lookupType(msgName);\r\n        let msg = rs.decode(msgBuf)\r\n\r\n        return msg;\r\n    }\r\n}\r\n\r\n\r\n"]}